syntax = "proto3";

package risinglight.rowset;

// Checksum of a block.
message BlockChecksum {
  enum ChecksumType {
    None = 0;
    CRC32 = 1;
  }
  ChecksumType checksum_type = 1;
  uint64 checksum = 2;
}

// Statistics of a block.
message BlockStatistics {
  // Description and usage of each statistics is described in `statistics.rs`.
  enum BlockStatisticsType {
    RowCount = 0;
    DistinctValue = 1;
  }
  BlockStatisticsType block_stat_type = 1;

  // Encoded data of the aggregated value. Generally, it should be an encoded `DataValue`.
  bytes body = 2;
}

// Index of a block, which contains necessary information to identify what's inside a block.
message BlockIndex {
  // Type of the current block. The type is stored in block header, and won't be stored in BlockIndex.
  enum BlockType {
    Plain = 0;
    RunLength = 1;
    ZstdCompress = 2;
    PlainNullable = 3;
    PlainFixedChar = 4;
    PlainVarchar = 5;
    RleNullable = 6;
    RleFixedChar = 7;
    RleVarchar = 8;
    Dictionary = 9;
    DictNullable = 10;
    DictFixedChar = 11;
    DictVarchar = 12;
  }

  // Block offset (in bytes) in the `.col` file.
  uint64 offset = 2;

  // Block length (in bytes).
  uint64 length = 3;

  // RowID of the first item in the block.
  uint32 first_rowid = 4;

  // Total count of rows in the block.
  uint32 row_count = 5;

  // First key in the block. Only used in sorted index.
  bytes first_key = 6;

  // Statistics of the block.
  repeated BlockStatistics stats = 7;

  // If first_key is null
  bool is_first_key_null = 8;
}

// An entry of a delete record.
message DeleteRecord {
  uint32 row_id = 2;
}
