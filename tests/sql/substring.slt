# Copyright 2018-2023 Stichting DuckDB Foundation
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

statement ok
CREATE TABLE strings(s VARCHAR, off INTEGER, length INTEGER);

statement ok
INSERT INTO strings VALUES ('hello', 1, 2), ('world', 2, 3), ('b', 1, 1), (NULL, 2, 2)

# test zero length
query TT
SELECT substring('ðŸ¦†ab', 1, 0), substring('abc', 1, 0)
----
(empty)	(empty)

# constant offset/length
# normal substring
query T
SELECT substring(s from 1 for 2) FROM strings
----
he
wo
b
NULL

# substring out of range
query T
SELECT substring(s from 2 for 2) FROM strings
----
el
or
(empty)
NULL

# variable length offset/length
query T
SELECT substring(s from off for length) FROM strings
----
he
orl
b
NULL

query T
SELECT substring(s from off for 2) FROM strings
----
he
or
b
NULL

query T
SELECT substring(s from 1 for length) FROM strings
----
he
wor
b
NULL

query T
SELECT substring('hello' from off for length) FROM strings
----
he
ell
h
el

# FIXME: support null inputs

# # test substrings with constant nulls in different places
# query T
# SELECT substring(NULL from off for length) FROM strings
# ----
# NULL
# NULL
# NULL
# NULL

# query T
# SELECT substring('hello' from NULL for length) FROM strings
# ----
# NULL
# NULL
# NULL
# NULL

# query T
# SELECT substring('hello' from off for NULL) FROM strings
# ----
# NULL
# NULL
# NULL
# NULL

# query T
# SELECT substring(NULL from NULL for length) FROM strings
# ----
# NULL
# NULL
# NULL
# NULL

# query T
# SELECT substring('hello' from NULL for NULL) FROM strings
# ----
# NULL
# NULL
# NULL
# NULL

# query T
# SELECT substring(NULL from off for NULL) FROM strings
# ----
# NULL
# NULL
# NULL
# NULL

# query T
# SELECT substring(NULL from NULL for NULL) FROM strings
# ----
# NULL
# NULL
# NULL
# NULL

# fixed slice
query T
SELECT substring(s from -2 for 2) FROM strings
----
lo
ld
b
NULL

# zero offset (this is accepted by SQLite)
query T
SELECT substring(s from 0 for length) FROM strings
----
h
wo
(empty)
NULL

# negative length
query T
SELECT substring(s, 2, -2) FROM strings
----
h
w
b
NULL

# negative offset and negative length
query T
SELECT substring(s, -2, -2) FROM strings
----
el
or
(empty)
NULL

# length 0
query T
SELECT substring(s, 2, 0) FROM strings
----
(empty)
(empty)
(empty)
NULL

# no length
query T
SELECT substring(s, 2) FROM strings
----
ello
orld
(empty)
NULL

query T
SELECT substring(substring(s, 2), 2) FROM strings
----
llo
rld
(empty)
NULL

# very large offset and length
query T
SELECT substring(s, 2147483647, 2147483647) FROM strings
----
(empty)
(empty)
(empty)
NULL

# FIXME: -2147483648 should be INT32
# query T
# SELECT substring(s, 2147483647, -2147483648) FROM strings
# ----
# hello
# world
# b
# NULL

query T
SELECT substring(s, -2147483647, 2147483647) FROM strings
----
hello
world
b
NULL

# FIXME: -2147483648 should be INT32
# query T
# SELECT substring(s, -2147483648, -2147483648) FROM strings
# ----
# (empty)
# (empty)
# (empty)
# NULL

# Issue #2553 - accept BIGINT arguments
# query I
# SELECT substring('abc', INSTR('abc', 'b'));
# ----
# bc

# Issue #4978 - substring integer overflow
query I
SELECT substring('a', -1)
----
a

query I
SELECT substring('abcd', -1)
----
d

query I
SELECT substring('abcd', -7)
----
abcd

# Even tough we accept bigints, we don't allow offsets and lengths larger than 
# a 32-bit integer, since we need to be able to do the internal resulting string 
# length calculations within a 64-bit integer to avoid overflows.

# statement error
# SELECT substring(s, 9223372036854775807, -9223372036854775808) FROM strings
# ----
# Out of Range Error: Substring offset outside of supported range (> 4294967295)
# 
# statement error
# SELECT substring(s, -9223372036854775808, -9223372036854775808) FROM strings
# ----
# Out of Range Error: Substring offset outside of supported range (< -4294967296)
# 
# statement error
# SELECT substring(s, 9223372036854775807, 9223372036854775807) FROM strings
# ----
# Out of Range Error: Substring offset outside of supported range (> 4294967295)
# 
# statement error
# SELECT substring(s, -9223372036854775808, 9223372036854775807) FROM strings
# ----
# Out of Range Error: Substring offset outside of supported range (< -4294967296)
# 
# statement error
# SELECT substring(s, 0, 9223372036854775807) FROM strings
# ----
# Out of Range Error: Substring length outside of supported range (> 4294967295)
# 
# statement error
# SELECT substring(s, 0, -9223372036854775808) FROM strings
# ----
# Out of Range Error: Substring length outside of supported range (< -4294967296)
# 
# # int32_t limits
# statement error
# SELECT substring(s, 4294967296, 2147483647) FROM strings
# ----
# Out of Range Error: Substring offset outside of supported range (> 4294967295)
# 
# statement error
# SELECT substring(s, -4294967297, 2147483647) FROM strings
# ----
# Out of Range Error: Substring offset outside of supported range (< -4294967296)
# 
# statement error
# SELECT substring(s, 0, 4294967296) FROM strings
# ----
# Out of Range Error: Substring length outside of supported range (> 4294967295)
# 
# statement error
# SELECT substring(s, 0, -4294967297) FROM strings
# ----
# Out of Range Error: Substring length outside of supported range (< -4294967296)
